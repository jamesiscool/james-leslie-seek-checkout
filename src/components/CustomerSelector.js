import React, {Component, Fragment} from 'react'import {connect} from 'react-redux'import {selectCustomer} from '../state/actions'import {fetchCustomers} from '../state/thunks'export class CustomerSelector extends Component {    componentDidMount() {        this.props.fetchCustomers()    }    handleSelectCustomer = (event) => {        this.props.selectCustomer(this.props.customers.filter(customer => customer.id === Number(event.target.value))[0])    }    render() {        return (            <Fragment>                <h4 className="my-4">Customer</h4>                <select value={this.props.selectedCustomer && this.props.selectedCustomer.id} onChange={this.handleSelectCustomer} className="custom-select customer-select">                    <option value={null}>None</option>                    {this.props.customers.map(customer => <option key={customer.id} value={customer.id}>{customer.name}</option>)}                </select>            </Fragment>        )    }}const mapDispatchToProps = dispatch => ({    fetchCustomers: () => dispatch(fetchCustomers()),    selectCustomer: (customer) => dispatch(selectCustomer(customer)),})const mapStateToProps = state => ({    customers: state.customers,    selectedCustomer: state.selectedCustomer,})export default connect(mapStateToProps, mapDispatchToProps)(CustomerSelector)